{"ast":null,"code":"var _jsxFileName = \"/Users/adityagupta/GEEKDO-v2/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\n// we need useState and useEffect hooks\nimport React, { useState, useEffect } from 'react'; // icons from react icons kit\n// main Icon component\n\nimport { Icon } from 'react-icons-kit'; // icons themselves\n\nimport { plus } from 'react-icons-kit/feather/plus';\nimport { edit2 } from 'react-icons-kit/feather/edit2';\nimport { trash } from 'react-icons-kit/feather/trash'; // getting todos from local storage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getTodosFromLS = () => {\n  const data = localStorage.getItem('Todos');\n\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n\nexport const Form = () => {\n  _s();\n\n  // todo value state\n  const [todoValue, setTodoValue] = useState(''); // todos array of objects\n\n  const [todos, setTodos] = useState(getTodosFromLS()); // console.log(todos);\n  // form submit event\n\n  const handleSubmit = e => {\n    e.preventDefault(); // creating a unique ID for every todo\n\n    const date = new Date();\n    const time = date.getTime(); // end of creating a ID\n    // creating a todo object\n\n    let todoObject = {\n      ID: time,\n      TodoValue: todoValue,\n      completed: false\n    }; // end of creating a todo object\n\n    setTodos([...todos, todoObject]);\n    setTodoValue('');\n  }; // saving data to local storage\n\n\n  useEffect(() => {\n    localStorage.setItem('Todos', JSON.stringify(todos));\n  }, [todos]); // delete todo\n\n  const handleDelete = id => {\n    // console.log(id);\n    const filtered = todos.filter(todo => {\n      return todo.ID !== id;\n    });\n    setTodos(filtered);\n  }; // edit form\n\n\n  const [editForm, setEditForm] = useState(false); // id state\n\n  const [id, setId] = useState(); // edit todo\n\n  const handleEdit = (todo, index) => {\n    setEditForm(true);\n    setTodoValue(todo.TodoValue);\n    setId(index);\n  }; // edit todo submit\n\n\n  const handleEditSubmit = e => {\n    e.preventDefault(); // copying todos state in items variable\n\n    let items = [...todos]; // storing the element at a particular index in item variable\n\n    let item = items[id]; // manipulating the item (object) keys\n\n    item.TodoValue = todoValue;\n    item.completed = false; // after manipulating item, saving it at the same index in items\n\n    items[id] = item; // updating todos with items\n\n    setTodos(items);\n    setEditForm(false);\n    setTodoValue('');\n  }; // handle checkbox\n\n\n  const handleCheckbox = id => {\n    let todoArray = [];\n    todos.forEach(todo => {\n      if (todo.ID === id) {\n        if (todo.completed === false) {\n          todo.completed = true;\n        } else if (todo.completed === true) {\n          todo.completed = false;\n        }\n      }\n\n      todoArray.push(todo); // console.log(todoArray);\n\n      setTodos(todoArray);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editForm === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-and-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add an Item\",\n            required: true,\n            onChange: e => setTodoValue(e.target.value),\n            value: todoValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: plus,\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), editForm === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: handleEditSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-and-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Edit your Item\",\n            required: true,\n            onChange: e => setTodoValue(e.target.value),\n            value: todoValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button edit\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"UPDATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), todos.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [todos.map((individualTodo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [editForm === false && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: individualTodo.completed,\n            onChange: () => handleCheckbox(individualTodo.ID)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: individualTodo.completed === true ? {\n              textDecoration: 'line-through'\n            } : {\n              textDecoration: 'none'\n            },\n            children: individualTodo.TodoValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }, this), editForm === false && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-and-delete\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: 7 + 'px'\n            },\n            onClick: () => handleEdit(individualTodo, index),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: edit2,\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleDelete(individualTodo.ID),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: trash,\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, individualTodo.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)), editForm === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-all\",\n          onClick: () => setTodos([]),\n          children: \"Delete All Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Form, \"FLo00iHFkiqwV+wy2XSLgYKO4Ak=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/adityagupta/GEEKDO-v2/src/Components/Form.js"],"names":["React","useState","useEffect","Icon","plus","edit2","trash","getTodosFromLS","data","localStorage","getItem","JSON","parse","Form","todoValue","setTodoValue","todos","setTodos","handleSubmit","e","preventDefault","date","Date","time","getTime","todoObject","ID","TodoValue","completed","setItem","stringify","handleDelete","id","filtered","filter","todo","editForm","setEditForm","setId","handleEdit","index","handleEditSubmit","items","item","handleCheckbox","todoArray","forEach","push","target","value","length","map","individualTodo","textDecoration","marginRight","display","justifyContent"],"mappings":"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","sourcesContent":["// we need useState and useEffect hooks\nimport React,{useState,useEffect} from 'react'\n\n// icons from react icons kit\n// main Icon component\nimport { Icon } from 'react-icons-kit'\n\n// icons themselves\nimport {plus} from 'react-icons-kit/feather/plus'\nimport {edit2} from 'react-icons-kit/feather/edit2'\nimport {trash} from 'react-icons-kit/feather/trash'\n\n// getting todos from local storage\nconst getTodosFromLS=()=>{\n    const data = localStorage.getItem('Todos');\n    if(data){\n        return JSON.parse(data);\n    }\n    else{\n        return []\n    }\n}\n\nexport const Form = () => {\n\n    // todo value state\n    const [todoValue, setTodoValue]=useState('');\n\n    // todos array of objects\n    const [todos, setTodos]=useState(getTodosFromLS());\n    // console.log(todos);\n\n    // form submit event\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n\n        // creating a unique ID for every todo\n        const date = new Date();\n        const time = date.getTime();\n        // end of creating a ID\n\n        // creating a todo object\n        let todoObject={\n          ID: time,\n          TodoValue:todoValue,\n          completed: false\n        }\n        // end of creating a todo object\n        setTodos([...todos,todoObject]);\n        setTodoValue('');\n    }\n\n    // saving data to local storage\n    useEffect(() => {\n        localStorage.setItem('Todos',JSON.stringify(todos));\n    }, [todos])\n\n    // delete todo\n    const handleDelete=(id)=>{\n      // console.log(id);\n      const filtered = todos.filter((todo)=>{\n        return todo.ID!==id\n      });\n      setTodos(filtered);\n    }\n\n    // edit form\n    const [editForm, setEditForm]=useState(false);\n\n    // id state\n    const [id,setId]=useState();\n\n    // edit todo\n    const handleEdit=(todo,index)=>{\n      setEditForm(true);\n      setTodoValue(todo.TodoValue);\n      setId(index);\n    }\n\n    // edit todo submit\n    const handleEditSubmit=(e)=>{\n      e.preventDefault();\n      // copying todos state in items variable\n      let items = [...todos];\n      // storing the element at a particular index in item variable\n      let item = items[id];\n      // manipulating the item (object) keys\n      item.TodoValue=todoValue;\n      item.completed=false;\n      // after manipulating item, saving it at the same index in items\n      items[id]=item;\n      // updating todos with items\n      setTodos(items);\n      setEditForm(false);\n      setTodoValue('');\n    }\n   \n    // handle checkbox\n    const handleCheckbox=(id)=>{\n      let todoArray=[];\n      todos.forEach((todo)=>{\n        if(todo.ID===id){\n          if(todo.completed===false){\n            todo.completed=true;\n          }\n          else if(todo.completed===true){\n            todo.completed=false;\n          }\n        }\n        todoArray.push(todo);\n        // console.log(todoArray);\n        setTodos(todoArray);\n      })\n    }\n\n    return (\n        <>\n\n          {/* form component */}\n          {editForm===false&&(\n            <div className=\"form\">\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <div className=\"input-and-button\">\n                  <input type='text' placeholder=\"Add an Item\" required\n                  onChange={(e)=>setTodoValue(e.target.value)} value={todoValue}/>\n                  <div className='button'>\n                    <button type=\"submit\">\n                      <Icon icon={plus} size={20}/>\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          )}\n          {/* end of form component */}\n\n          {/* edit form component */}\n          {editForm===true&&(\n            <div className=\"form\">\n              <form autoComplete=\"off\" onSubmit={handleEditSubmit}>\n                <div className=\"input-and-button\">\n                  <input type='text' placeholder=\"Edit your Item\" required\n                  onChange={(e)=>setTodoValue(e.target.value)} value={todoValue}/>\n                  <div className='button edit'>\n                    <button type=\"submit\">\n                      UPDATE\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          )}\n          {/* end of edit form component */}\n\n          {todos.length>0&&(\n            <>\n              {todos.map((individualTodo,index)=>(\n                <div className='todo' key={individualTodo.ID}>\n                  <div>\n                      {editForm===false&&(\n                        <input type='checkbox' checked={individualTodo.completed}\n                        onChange={()=>handleCheckbox(individualTodo.ID)}/>\n                      )}\n                      <span\n                      style={individualTodo.completed===true?{textDecoration:'line-through'}:{textDecoration:'none'}}>{individualTodo.TodoValue}</span>\n                  </div>\n\n                  {editForm===false&&(\n                    <div className='edit-and-delete'>\n                      <div style={{marginRight:7+'px'}}\n                      onClick={()=>handleEdit(individualTodo,index)}>\n                          <Icon icon={edit2} size={18}/>\n                      </div>\n                      <div onClick={()=>handleDelete(individualTodo.ID)}>\n                          <Icon icon={trash} size={18}/>\n                      </div>\n                    </div>\n                  )}\n\n                </div>\n              ))} \n\n              {/* delete all todos */}\n              {editForm===false&&(\n                <div style={{display:'flex',justifyContent:'flex-end'}}>\n                  <button className='delete-all'\n                  onClick={()=>setTodos([])}>Delete All Items</button>\n                </div>\n              )}\n            </>\n          )}\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}